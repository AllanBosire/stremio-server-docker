name: Build and publish Docker image

on:
  repository_dispatch:
    types: [new-release]
  
jobs:
  build-and-publish:
    name: Build and publish Docker image tag ${{ github.event.client_payload.tag }}
    runs-on: ubuntu-latest
    steps:
      # - uses: robinraju/release-downloader@v1.7
      #   with: 
      #     # The source repository path.
      #     repository: "stremio/server"
          
      #     # A flag to set the download target as latest release
      #     # The default value is 'false'
      #     latest: true
          
      #     # The github tag. e.g: v1.0.1
      #     # Download assets from a specific tag/version
      #     tag: "github.event.client_payload.tag"
          
      #     # The release id to download files from 
      #     # releaseId: ""
          
      #     # The name of the file to download.
      #     # Use this field only to specify filenames other than tarball or zipball, if any.
      #     # Supports wildcard pattern (eg: '*', '*.deb', '*.zip' etc..)
      #     fileName: "desktop-server.js"
          
      #     # Download the attached tarball (*.tar.gz)
      #     tarBall: false
          
      #     # Download the attached zipball (*.zip)
      #     zipBall: false
          
      #     # Relative path under $GITHUB_WORKSPACE to place the downloaded file(s)
      #     # It will create the target directory automatically if not present
      #     # eg: out-file-path: "my-downloads" => It will create directory $GITHUB_WORKSPACE/my-downloads
      #     out-file-path: "."
          
      #     # Github access token to download files from private repositories
      #     # https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
      #     # eg: token: ${{ secrets.MY_TOKEN }}
      #     token: ${{ secrets.MY_TOKEN }}

      #     # The URL of the Github API, only use this input if you are using Github Enterprise
      #     # Default: "https://api.github.com"
      #     # Use http(s)://[hostname]/api/v3 to access the API for GitHub Enterprise Server
      #     github-api-url: ""
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: stremio/server
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ github.event.client_payload.tag }}
          labels: ${{ steps.meta.outputs.labels }}